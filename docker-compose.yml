version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: card-collection-postgres
    environment:
      POSTGRES_DB: card-collection-manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - card-collection-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: card-collection-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - card-collection-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: card-collection-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - card-collection-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: card-collection-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - card-collection-network

  # Kafka UI (Web Dashboard)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: card-collection-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - card-collection-network

  # Logto Authentication
  logto:
    image: svhd/logto:latest
    container_name: card-collection-logto
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3001"
      - "3002:3002"
    environment:
      TRUST_PROXY_HEADER: "1"
      DB_URL: postgres://postgres:postgres@postgres:5432/logto
      ENDPOINT: http://localhost:3001
      ADMIN_ENDPOINT: http://localhost:3002
    networks:
      - card-collection-network
    # Enable access to host machine from container
    extra_hosts:
      - "host.docker.internal:host-gateway"
    entrypoint: ["sh", "-c", "npm run cli db seed -- --swe && npm start"]

networks:
  card-collection-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
